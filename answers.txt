1 followed by all 0s
0 followed by all 1s
All 0s
All 1s
-(2^(w-1))
(2^(w-1)) -1
0
2^w - 1
22
71
56
2 
-38
-91
2^w
False
14
4
5
1111 1101
0000 1010
0111 1000
0010 1000
By biasing the answer up by 2^k - 1, then using the ~ operator on the result
Time frame, Number of transisters, Area
2 years
Double
The same as previous chips
Current * .7 OR Current * sqrt(.5)
Current / .7 OR Current / sqrt(.5)
4.24 and 8.49
1.414 and 2.83
7.07 and 14.14
Stores 1000 40-bit words, as well as the address of the next instruction
Handles input and output, and holds word that has been read form, or will be written to memory
Performs addition and subtraction instructions
Holds 20 bit instructions
Keeps track of where you are in the program
Holds right hand instruction
True: -13  Expected: -45
True: -8  Expected: -104
True: 7  Expected: 15
Sand
It gets purified to be as conductive as possible
The slicing step
The photolithography step
Wafers
Photolithography
High-Level Language Level
Assembly Language Level
Operating System Machine Level
Instruction Set Architecture Level
Microarchitecutre Level
Digital Logic Level
Mechanical Computers
Vacuum Tube Computers
Discrete Transister Computers
Integrated Circut Computers
Vary Large Scale Integration
Low Power
He created the first general purpose and programmable computer 
He created the IAS and the first Assembly Language
He co-founded intel, and introduced Moore's Law
First general purpose electronic Computer
The Army's Ballistics Research Laboratory
Originally for trajectory calculations, then for the creation of the hydrogen bomb
80 feet long, 8.5 feet high, several feet wide
18,000
5,000
A computer built at Princeton's Institute for Advantages Studies
John von Neumann
The Arithmetic Logic Unit, and the Control Unit
20 bits
21 instructions
The current standard cpu architecture for desktop Computers
It was twice as powerful as the previous generation CPU, and was 64 bit
y = x >> 4; y = y & 0x4F 
y = x >> 3; y = y & 0x1FF
y = x >> 6; y = y & 0xFF
y = x >> 12; y = y = & 0x1FE
Time (T) = Instruction Count (IC) * Cycles Per Instruction (CPI) * Clock Period (tau)
Power (P) = Capacitive Load (L) * Voltage (V)^2 * Frequency (f)
They load information from memory into the AC
They store information from the AC ino memory
The JUMP instruction
The HALT instruction
